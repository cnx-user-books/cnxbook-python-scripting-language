<document xmlns="http://cnx.rice.edu/cnxml"> 
<title>Itse1359-1120-Empty and Single-Item Tuples</title>
<metadata xmlns:md="http://cnx.rice.edu/mdml">
  <md:content-id>m51383</md:content-id>
  <md:title>Itse1359-1120-Empty and Single-Item Tuples</md:title>
  <md:abstract>This module will teach you how to create empty tuples and tuples containing only one item.</md:abstract>
  <md:uuid>0d8b5d0a-7bda-44e8-aa39-9f5531182d31</md:uuid>
</metadata>

<content>
















<section id="h11000">
<title>
Table of contents

</title>




<list id="ul1000" list-type="bulleted">

	

<item id="li1000">
<link id="a1000" target-id="Preface">

Preface

</link>


	

<list id="ul1001" list-type="bulleted">

		

<item id="li1001">
<link id="a1001" target-id="Viewing_tip">

Viewing tip

</link>


<list id="ul1002" list-type="bulleted">

			

<item id="li1002">
<link id="a1002" target-id="Figures">

Figures

</link>


</item>


			

<item id="li1003">
<link id="a1003" target-id="Listings">

Listings

</link>


</item>



		

</list>


		

</item>


	

</list>


	

</item>



	

<item id="li1004">
<link id="a1004" target-id="Introduction">

Introduction

</link>




</item>


	

<item id="li1005">
<link id="a1005" target-id="What_Is_a_Tuple">

What is a tuple?


</link>




</item>


	

<item id="li1006">
<link id="a1006" target-id="Sample_Program">

Sample program


</link>


	

<list id="ul1003" list-type="bulleted">

		

<item id="li1007">
<link id="a1007" target-id="Empty_single-item_and_nested_tuples_">

Empty, single-item, and nested tuples 
		

</link>

 

</item>


		

<item id="li1008">
<link id="a1008" target-id="An_empty_tuple">

An empty tuple

</link>


</item>


		

<item id="li1009">
<link id="a1009" target-id="A_tuple_with_only_one_element">

A tuple with only one element

</link>


</item>


		

<item id="li1010">
<link id="a1010" target-id="Nested_tuples_">

Nested tuples 

</link>

 

</item>


		

<item id="li1011">
<link id="a1011" target-id="Doublynested_tuples">

Doubly-nested tuples

</link>


</item>


	

</list>




</item>


	

<item id="li1012">
<link id="a1012" target-id="Complete_program_listing">

Complete program listing

</link>


</item>


	

<item id="li1013">
<link id="a1013" target-id="Visualization_of_the_tuples">

Visualization of the tuples

</link>


</item>




	

<item id="li1014">
<link id="a1014" target-id="Run_the_program">

Run the program

</link>


</item>



	

<item id="li1015">
<link id="a1015" target-id="Miscellaneous">

Miscellaneous

</link>


</item>





</list>


	
	

</section>
<section id="h11001">
<title>
<emphasis id="Preface" effect="bold">

Preface

</emphasis>


</title>


	
	

<para id="p1000">
This module is one in a collection of modules on Python designed for 
teaching 

<emphasis id="em1000" effect="italics">
ITSE 1359 Introduction to Scripting Languages: Python

</emphasis>
 at Austin Community 
College in Austin, TX. 

</para>


	

<section id="h21000">
<title>
<emphasis id="Viewing_tip" effect="bold">

Viewing tip

</emphasis>


</title>


	

<para id="p1001">
I recommend that you open another copy of this module in a separate 
browser window and use the following links to easily find and view the 
Figures and the Listings while you are reading about them.

</para>




<para id="p1002">
<emphasis id="em1001" effect="italics">
(Note to blind and visually impaired students: Most of the Figures and all of the Listings in 
this module are presented in plain text format and should be accessible using an 
audio screen reader or a braille display.)

</emphasis>
</para>


	

<section id="h31000">
<title>
<emphasis id="Figures" effect="bold">

Figures

</emphasis>


</title>


	

<list id="ul1004" list-type="bulleted">

		

<item id="li1016">
<link id="a1016" target-id="Figure_1">

Figure 1

</link>

. Output from the code in Listing 1.

</item>


		

<item id="li1017">
<link id="a1017" target-id="Figure_2">

Figure 2

</link>

. Output from the code in Listing 2.

</item>


		

<item id="li1018">
<link id="a1018" target-id="Figure_3">

Figure 3

</link>

. Output from the code in Listing 3.

</item>


		

<item id="li1019">
<link id="a1019" target-id="Figure_4">

Figure 4

</link>

. Consolidated output from the program in Listing 4.

</item>


		

<item id="li1020">
<link id="a1020" target-id="Figure_5">

Figure 5

</link>

. Visualization of the tuples.

</item>



	

</list>




</section>
<section id="h31001">
<title>
<emphasis id="Listings" effect="bold">

Listings

</emphasis>


</title>




<list id="ul1005" list-type="bulleted">

		

<item id="li1021">
<link id="a1021" target-id="Listing_1">

Listing 1

</link>

. Beginning of the program. 

</item>


		

<item id="li1022">
<link id="a1022" target-id="Listing_2">

Listing 2

</link>

. A tuple with only one element.

</item>


		

<item id="li1023">
<link id="a1023" target-id="Listing_3">

Listing 3

</link>

. Create and print nested tuples.

</item>


		

<item id="li1024">
<link id="a1024" target-id="Listing_4">

Listing 4

</link>

. Create and print nested tuples.

</item>




</list>




</section>
</section>
</section>
<section id="h11002">
<title>
<emphasis id="Introduction" effect="bold">

Introduction

</emphasis>


</title>




<para id="p1003">
This module is part of a series of modules designed to teach you about tuples 
in Python. 

</para>




<para id="p1004">
Previous modules have illustrated 

</para>




<list id="ul1006" list-type="bulleted">

	

<item id="li1025">
How to create a tuple.

</item>


	

<item id="li1026">
How to access a tuple item using indexing.

</item>


	

<item id="li1027">
How to slice a tuple.

</item>


	

<item id="li1028">
How to nest tuples.

</item>




</list>




<para id="p1005">
This module will teach you how to create empty tuples and tuples containing 
only one item.

</para>




</section>
<section id="h11003">
<title>
<emphasis id="What_Is_a_Tuple" effect="bold">

What is a tuple

</emphasis>

?

</title>




<para id="p1006">
A tuple is like a list whose values cannot be modified. It is an ordered list 
of objects, and it can contain references to any type of object. 

</para>




<list id="ul1007" list-type="bulleted">

	

<item id="li1029">
Tuples are normally written as a sequence of items contained in 

<emphasis id="em1002" effect="italics">

	(optional)

</emphasis>
 matching 
	parentheses.

</item>


	

<item id="li1030">
A tuple is an immutable sequence.

</item>


	

<item id="li1031">
Items in a tuple are accessed using a numeric index.

</item>


	

<item id="li1032">
Tuples can be nested.

</item>




</list>




</section>
<section id="h11004">
<title>
<emphasis id="Sample_Program" effect="bold">

Sample Program

</emphasis>


</title>




<section id="h21001">
<title>
<emphasis id="Empty_single-item_and_nested_tuples_" effect="bold">

Empty, single-item, and 
nested tuples 

</emphasis>

 


</title>




<para id="p1007">
<link id="a1025" target-id="Listing_4">

Listing 4

</link>

 shows a Python program that 

</para>




<list id="ul1008" list-type="bulleted">

	

<item id="li1033">
Creates an empty tuple.

</item>


	

<item id="li1034">
Creates a single-item tuple.

</item>


	

<item id="li1035">
Nests the two tuples along with some strings in a third tuple.

</item>


	

<item id="li1036">
Determines the length of each of the tuples.

</item>


	

<item id="li1037">
Displays all of the above

</item>




</list>




<para id="p1008">
A consolidated output from the program is shown in 

<link id="a1026" target-id="Figure_4">

Figure 4

</link>

.

</para>




<para id="p1009">
A 

<link id="a1027" url="http://pythontutor.com/visualize.html#mode=display">

visualization

</link>

 
of the tuples in the program is provided in 

<link id="a1028" target-id="Figure_5">

Figure 5

</link>

.

</para>




</section>
<section id="h21002">
<title>
<emphasis id="An_empty_tuple" effect="bold">

An empty tuple

</emphasis>


</title>




<para id="p1010">
I will explain this program in fragments. The beginning of the program is 
shown in 

<link id="a1029" target-id="Listing_1">

Listing 1

</link>

.

</para>


	

<table id="table1000" summary="This is a table." pgwide="630">
<tgroup cols="1">


		

<thead id="thead1000">

			

<row id="tr1000">

				

<entry id="th1000">
<emphasis id="Listing_1" effect="bold">

Listing 1

</emphasis>

. Beginning of the 
				program.


</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1000">

			

<row id="tr1001">

				

<entry id="td1000">



<code id="pre1000" display="block">
# Illustrates empty tuples and tuples with only one element
#----------------------------------------------------------

print("Create and print empty tuple")
t1 = ()
print(t1)
print("Length of empty tuple is")
print(len(t1))
</code>




				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>





<para id="p1011">
As you might have guessed from the name, an empty tuple is just a pair of 
empty parentheses as shown by the second statement in 

<link id="a1030" target-id="Listing_1">

Listing 1

</link>

. 


<emphasis id="em1003" effect="italics">
(The parentheses aren't optional for an empty tuple.)

</emphasis>
</para>




<para id="p1012">
<link id="a1031" target-id="Figure_1">

Figure 1

</link>

 shows the output produced by the code in 

<link id="a1032" target-id="Listing_1">

Listing 1

</link>

. The empty tuple 
is displayed simply as a pair of empty parentheses, and the length of the empty 
tuple is shown to be zero. 

</para>



	

<table id="table1001" summary="This is a table." pgwide="630">
<tgroup cols="1">


		

<thead id="thead1001">

			

<row id="tr1002">

				

<entry id="th1001">
<emphasis id="Figure_1" effect="bold">

Figure 1

</emphasis>

. Output from the code 
				in Listing 1.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1001">

			

<row id="tr1003">

				

<entry id="td1001">



<code id="pre1001" display="block">
Create and print empty tuple
()
Length of empty tuple is
0
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>






</section>
<section id="h21003">
<title>
<emphasis id="A_tuple_with_only_one_element" effect="bold">

A tuple with only one element

</emphasis>


</title>




<para id="p1013">
There are probably no surprises regarding an empty tuple. However, there may 
be some surprises in the code fragment shown in 

<link id="a1033" target-id="Listing_2">

Listing 2

</link>

. This fragment deals 
with a tuple containing only one element. 

</para>


	

<table id="table1002" summary="This is a table." pgwide="630">
<tgroup cols="1">


		

<thead id="thead1002">

			

<row id="tr1004">

				

<entry id="th1002">
<emphasis id="Listing_2" effect="bold">

Listing 2

</emphasis>

. A tuple with only 
				one element.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1002">

			

<row id="tr1005">

				

<entry id="td1002">



<code id="pre1002" display="block">
print("Create and print one-element tuple")
# Note the req trailing comma
t2 = "a",
print(t2)
print("Length of one-element tuple is:")
print(len(t2))
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>






<para id="p1014">
The syntax for creating a tuple with only one element is rather ugly, but is 
required to avoid ambiguity. In particular, it is necessary to follow the single 
tuple item with a comma as shown in the third line of text in 

<link id="a1034" target-id="Listing_2">

Listing 2

</link>

.

</para>




<para id="p1015">
Had I written that line simply as follows without the extra comma, 

</para>




<para id="p1016">
<emphasis id="strong1000" effect="bold">
t2 = "a" 

</emphasis>
 

</para>




<para id="p1017">
the result would have been to create a new variable named 

<emphasis id="strong1001" effect="bold">
t2

</emphasis>
 whose contents 
would be the string "a". 

<emphasis id="em1004" effect="italics">
(The parentheses are optional here but the 
comma is required with or without the parentheses.)

</emphasis>
</para>




<para id="p1018">
This would not indicate a tuple at all. The extra comma is required to 
make a single-item tuple unique and to distinguish it from other possibilities.


</para>




<para id="p1019">
<link id="a1035" target-id="Figure_2">

Figure 2

</link>

 shows the output produced by the code in 

<link id="a1036" target-id="Listing_2">

Listing 2

</link>

. The single-item 
tuple is shown in the third line of text in 

<link id="a1037" target-id="Listing_2">

Listing 2

</link>

. As is always the case, the tuple is 
displayed in parentheses. 

</para>



	

<table id="table1003" summary="This is a table." pgwide="630">
<tgroup cols="1">


		

<thead id="thead1003">

			

<row id="tr1006">

				

<entry id="th1003">
<emphasis id="Figure_2" effect="bold">

Figure 2

</emphasis>

. Output from the code 
				in Listing 2.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1003">

			

<row id="tr1007">

				

<entry id="td1003">



<code id="pre1003" display="block">
Create and print one-element tuple
('a',)
Length of one-element tuple is:
1
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>




	

<para id="p1020">
The length of the tuple as shown in 

<link id="a1038" target-id="Figure_2">

Figure 2

</link>

 is 
one (1) item. 

</para>




</section>
<section id="h21004">
<title>
<emphasis id="Nested_tuples_" effect="bold">

Nested tuples 

</emphasis>

 

</title>




<para id="p1021">
Just to give you a little more practice in dealing with nested tuples, the 
code in 

<link id="a1039" target-id="Listing_3">

Listing 3

</link>

 nests the two tuples created above into a new tuple and stores 
a reference to the new tuple in the variable named 

<emphasis id="strong1002" effect="bold">
t3

</emphasis>
. 

</para>


	

<table id="table1004" summary="This is a table." pgwide="630">
<tgroup cols="1">


		

<thead id="thead1004">

			

<row id="tr1008">

				

<entry id="th1004">
<emphasis id="Listing_3" effect="bold">

Listing 3

</emphasis>

. Create and print 
				nested tuples.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1004">

			

<row id="tr1009">

				

<entry id="td1004">



<code id="pre1004" display="block">
print("Create and print nested tuple")
t3 = "A",t1,"B",(t2,"Z"),"C"
print(t3)

print("Length of nested tuple is")
print(len(t3))
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>




	

</section>
<section id="h21005">
<title>
<emphasis id="Doublynested_tuples" effect="bold">

Doubly-nested tuples

</emphasis>

 

</title>




<para id="p1022">
However unlike previous sample programs, in this case, literal parentheses 
are used to cause the tuple named 

<emphasis id="strong1003" effect="bold">
t2

</emphasis>
 to be doubly nested. 

</para>




<para id="p1023">
In particular, as shown by the second statement in 

<link id="a1040" target-id="Listing_3">

Listing 3

</link>

, 
the tuple named 

<emphasis id="strong1004" effect="bold">
t2

</emphasis>
 and the string 

<emphasis id="strong1005" effect="bold">
"Z"

</emphasis>
 are used to create a tuple, which in turn, 
is nested in the tuple assigned to the variable named 

<emphasis id="strong1006" effect="bold">
t3

</emphasis>
. This 
is also shown in the


<link id="a1041" url="http://pythontutor.com/visualize.html#mode=display">

visualization

</link>

 
in 

<link id="a1042" target-id="Figure_5">

Figure 5

</link>

.

</para>




<para id="p1024">
The double nesting is evidenced by the extra parentheses in the second line 
of text in the output shown in 

<link id="a1043" target-id="Figure_3">

Figure 3

</link>

. 

</para>


	

<table id="table1005" summary="This is a table." pgwide="630">
<tgroup cols="1">


		

<thead id="thead1005">

			

<row id="tr1010">

				

<entry id="th1005">
<emphasis id="Figure_3" effect="bold">

Figure 3

</emphasis>

. Output from the code 
				in Listing 3.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1005">

			

<row id="tr1011">

				

<entry id="td1005">



<code id="pre1005" display="block">
Create and print nested tuple
('A', (), 'B', (('a',), 'Z'), 'C')
Length of nested tuple is
5
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>






<para id="p1025">
The length of the tuple is also shown in 

<link id="a1044" target-id="Figure_3">

Figure 3

</link>

. Even though the tuple named 

<emphasis id="strong1007" effect="bold">
t3

</emphasis>
 contains 
two nested tuples 

<emphasis id="em1005" effect="italics">
(one of which is doubly-nested)

</emphasis>
, its overall length is only 
five (5) items. 

</para>




<para id="p1026">
One of the tuples nested inside of 

<emphasis id="strong1008" effect="bold">
t3

</emphasis>
 has a length of 
zero but it still counts as one item when the length of 

<emphasis id="strong1009" effect="bold">
t3

</emphasis>
 is determined. 

</para>




</section>
</section>
<section id="h11005">
<title>
<emphasis id="Complete_program_listing" effect="bold">

Complete program listing

</emphasis>


</title>




<para id="p1027">
A complete listing of the program is shown in 

<link id="a1045" target-id="Listing_4">

Listing 4

</link>

. 

</para>














	

<table id="table1006" summary="This is a table." pgwide="630">
<tgroup cols="1">


		

<thead id="thead1006">

			

<row id="tr1012">

				

<entry id="th1006">
<emphasis id="Listing_4" effect="bold">

Listing 4

</emphasis>

. Complete program 
				listing.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1006">

			

<row id="tr1013">

				

<entry id="td1006">



<code id="pre1006" display="block">
# Illustrates empty tuples and tuples with only one element
#----------------------------------------------------------

print("Create and print empty tuple")
t1 = ()
print(t1)
print("Length of empty tuple is")
print(len(t1))

print("Create and print one-element tuple")
# Note the req trailing comma
t2 = "a",
print(t2)
print("Length of one-element tuple is:")
print(len(t2))


print("Create and print nested tuple")
t3 = "A",t1,"B",(t2,"Z"),"C"
print(t3)

print("Length of nested tuple is")
print(len(t3))
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>




	

<para id="p1028">
A consolidated output from the program is shown in 

<link id="a1046" target-id="Figure_4">

Figure 4

</link>

.

</para>


	

<table id="table1007" summary="This is a table." pgwide="630">
<tgroup cols="1">


		

<thead id="thead1007">

			

<row id="tr1014">

				

<entry id="th1007">
<emphasis id="Figure_4" effect="bold">

Figure 4

</emphasis>

. Consolidated output 
				from the program in Listing 4.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1007">

			

<row id="tr1015">

				

<entry id="td1007">



<code id="pre1007" display="block">
Create and print empty tuple
()
Length of empty tuple is
0
Create and print one-element tuple
('a',)
Length of one-element tuple is:
1
Create and print nested tuple
('A', (), 'B', (('a',), 'Z'), 'C')
Length of nested tuple is
5
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>




</section>
<section id="h11006">
<title>
<emphasis id="Visualization_of_the_tuples" effect="bold">

Visualization of the tuples

</emphasis>


</title>




<para id="p1029">
A 

<link id="a1047" url="http://pythontutor.com/visualize.html#mode=display">

visualization

</link>

 of the tuples in the program is provided in 


<link id="a1048" target-id="Figure_5">

Figure 5

</link>

.

</para>





<para id="p1030">
<emphasis id="strong1010" effect="bold">
<emphasis id="Figure_5" effect="bold">

Figure 5.

</emphasis>

 Visualization of the tuples.

</emphasis>
</para>




<para id="p1031">
<media id="media1000" alt="Visualization of the tuples." display="block">
<image id="img1000" mime-type="image/jpeg" src="../../media/1359-1120a.jpg" width="793" height="472"/>
</media>


</para>






</section>
<section id="h11007">
<title>
<emphasis id="Run_the_program" effect="bold">

Run the program

</emphasis>


</title>





<para id="p1032">
I encourage you to copy the code from 

<link id="a1049" target-id="Listing_4">

Listing 4

</link>

. Execute the code and confirm 
that you get the same results as those shown in 

<link id="a1050" target-id="Figure_4">

Figure 4

</link>

. Experiment with the code, 
making changes, and observing the results of your changes. Make certain that you 
can explain why your changes behave as they do.

</para>


	

</section>
<section id="h11008">
<title>
<emphasis id="Miscellaneous" effect="bold">

Miscellaneous

</emphasis>


</title>


	

<para id="p1033">
This section contains a variety of miscellaneous information.

</para>





	

<note id="note1000" type="">


		


			


				

<emphasis id="strong1011" effect="bold">
Housekeeping material

</emphasis>

				

<list id="ul1009" list-type="bulleted">

					

<item id="li1038">
Module name: Itse1359-1120-Empty and Single-Item Tuples

</item>


					

<item id="li1039">
File: Itse1359-1120.htm


</item>


					

<item id="li1040">
Published: 10/19/14

</item>


					

<item id="li1041">
Revised: 01/31/16

</item>


				

</list>


				

</note>

			


		



	






	

<note id="note1001" type="">


		


			


				

<emphasis id="strong1012" effect="bold">
Disclaimers:

</emphasis>
<para id="p1034">
<emphasis id="strong1013" effect="bold">
Financial

</emphasis>
: Although the Connexions
site makes it possible for you to download a PDF file for this
module at no charge, and also makes it possible for you to
purchase a pre-printed version of the PDF file, you should be
aware that some of the HTML elements in this module may not translate well into
PDF.

</para>


				

<para id="p1035">
I also want you to know that, I receive no financial compensation from the Connexions website even if you purchase 
	the PDF version of the module.

</para>


				

<para id="p1036">
In the past, unknown individuals have copied my modules from cnx.org, converted them to Kindle books, and 
				placed them for sale on Amazon.com showing me as the author. I 
				neither receive compensation for those sales nor do I know who does 
				receive compensation. If you purchase such a book, please be 
				aware that it is a copy of a module that is freely 
				available on cnx.org and that it was made and published without 
				my prior knowledge.

</para>


				

<para id="p1037">
<emphasis id="strong1014" effect="bold">
Affiliation

</emphasis>
: I am a professor of Computer Information 
	Technology at Austin Community College in Austin, TX.
	

</para>


				

</note>

			


		



	





<para id="p1038">
-end- 

</para>






</section>
</content>




</document>