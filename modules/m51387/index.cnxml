<document xmlns="http://cnx.rice.edu/cnxml"> 
<title>Itse1359-1110-Nested Tuples</title>
<metadata xmlns:md="http://cnx.rice.edu/mdml">
  <md:content-id>m51387</md:content-id>
  <md:title>Itse1359-1110-Nested Tuples</md:title>
  <md:abstract>This module will expand your knowledge of tuples by teaching you about nesting tuples within other tuples.</md:abstract>
  <md:uuid>b10651ac-e806-45f2-8593-28a72e831d27</md:uuid>
</metadata>

<content>
















<section id="h11000">
<title>
Table of contents

</title>




<list id="ul1000" list-type="bulleted">

	

<item id="li1000">
<link id="a1000" target-id="Preface">

Preface

</link>


	

<list id="ul1001" list-type="bulleted">



		

<item id="li1001">
<link id="a1001" target-id="Viewing_tip">

Viewing tip

</link>


<list id="ul1002" list-type="bulleted">

			

<item id="li1002">
<link id="a1002" target-id="Figures">

Figures

</link>


</item>


			

<item id="li1003">
<link id="a1003" target-id="Listings">

Listings

</link>


</item>



		

</list>


		

</item>


	

</list>


	

</item>



	

<item id="li1004">
<link id="a1004" target-id="Introduction">

Introduction

</link>




</item>


	

<item id="li1005">
<link id="a1005" target-id="What_is_a_tuple">

What is a tuple?


</link>




</item>


	

<item id="li1006">
<link id="a1006" target-id="Sample_program">

Sample program


</link>


	

<list id="ul1003" list-type="bulleted">

		

<item id="li1007">
<link id="a1007" target-id="Create_two_tuples">

Create two tuples 

</link>

 

</item>


		

<item id="li1008">
<link id="a1008" target-id="Nesting_the_tuples">

Nesting the tuples

</link>


</item>


		

<item id="li1009">
<link id="a1009" target-id="Get_the_length_of_the_new_tuple_">

Get the length of the new tuple 
		

</link>

 

</item>


	

</list>




</item>


	

<item id="li1010">
<link id="a1010" target-id="Complete_program_listing">

Complete program listing

</link>


</item>


	

<item id="li1011">
<link id="a1011" target-id="Visualization_of_the_tuples">

Visualization of the tuples

</link>


</item>




	

<item id="li1012">
<link id="a1012" target-id="Run_the_program">

Run the program

</link>


</item>



	

<item id="li1013">
<link id="a1013" target-id="Miscellaneous">

Miscellaneous

</link>


</item>





</list>


	
	

</section>
<section id="h11001">
<title>
<emphasis id="Preface" effect="bold">

Preface

</emphasis>


</title>


	
	

<para id="p1000">
This module is one in a collection of modules on Python designed for 
teaching 

<emphasis id="em1000" effect="italics">
ITSE 1359 Introduction to Scripting Languages: Python

</emphasis>
 at Austin Community 
College in Austin, TX. 

</para>


	

<section id="h21000">
<title>
<emphasis id="Viewing_tip" effect="bold">

Viewing tip

</emphasis>


</title>


	

<para id="p1001">
I recommend that you open another copy of this module in a separate 
browser window and use the following links to easily find and view the Figures 
	and Listings 
while you are reading about them.

</para>




<para id="p1002">
<emphasis id="em1001" effect="italics">
(Note to blind and visually impaired students: most of the Figures all of the Listings in 
this module are presented in plain text format and should be accessible using an 
audio screen reader or a braille display.)

</emphasis>
</para>


	

<section id="h31000">
<title>
<emphasis id="Figures" effect="bold">

Figures

</emphasis>


</title>


	

<list id="ul1004" list-type="bulleted">

		

<item id="li1014">
<link id="a1014" target-id="Figure_1">

Figure 1

</link>

. Output from the code in Listing 1.

</item>


		

<item id="li1015">
<link id="a1015" target-id="Figure_2">

Figure 2

</link>

. Output from the code in Listing 2.

</item>


		

<item id="li1016">
<link id="a1016" target-id="Figure_3">

Figure 3

</link>

. Output from the code in Listing 3.

</item>


		

<item id="li1017">
<link id="a1017" target-id="Figure_4">

Figure 4

</link>

. Output from the code in Listing 4.

</item>


		

<item id="li1018">
<link id="a1018" target-id="Figure_5">

Figure 5

</link>

. Visualization of the tuples

</item>


	

</list>




</section>
<section id="h31001">
<title>
<emphasis id="Listings" effect="bold">

Listings

</emphasis>


</title>




<list id="ul1005" list-type="bulleted">

		

<item id="li1019">
<link id="a1019" target-id="Listing_1">

Listing 1

</link>

. Beginning of the program. 

</item>


		

<item id="li1020">
<link id="a1020" target-id="Listing_2">

Listing 2

</link>

. Nesting the tuples.

</item>


		

<item id="li1021">
<link id="a1021" target-id="Listing_3">

Listing 3

</link>

. Get the length of the new tuple.

</item>


		

<item id="li1022">
<link id="a1022" target-id="Listing_4">

Listing 4

</link>

. Complete program listing.

</item>




</list>


	

</section>
</section>
</section>
<section id="h11002">
<title>
<emphasis id="Introduction" effect="bold">

Introduction

</emphasis>


</title>




<para id="p1003">
Previous modules have introduced you to lists, subscriptions, sequences, 
mutable sequences, mappings, slicings, and tuples.

</para>




<para id="p1004">
The earlier module titled 


<link id="a1023" url="http://cnx.org/contents/59b92f58-fa74-4624-a37a-37ab2794536a">


Itse1359-1100-Indexing and Slicing Tuples

</link>

 showed you:

</para>




<list id="ul1006" list-type="bulleted">

	

<item id="li1023">
How to create a tuple.

</item>


	

<item id="li1024">
How to access a tuple item using indexing.

</item>


	

<item id="li1025">
How to slice a tuple.

</item>




</list>




<para id="p1005">
This module will expand your knowledge of tuples by teaching you about 
nesting tuples within other tuples.

</para>




</section>
<section id="h11003">
<title>
<emphasis id="What_is_a_tuple" effect="bold">

What is a tuple

</emphasis>

?

</title>




<para id="p1006">
To briefly repeat part of what you learned in the earlier module, a tuple is like a list 
whose values cannot be modified. In other words, a tuple is immutable. 

</para>




<list id="ul1007" list-type="bulleted">

	

<item id="li1026">
Tuples are normally written as a sequence of items contained in 

<emphasis id="em1002" effect="italics">

	(optional)

</emphasis>
 matching 
	parentheses.

</item>


	

<item id="li1027">
A tuple is an immutable sequence.

</item>


	

<item id="li1028">
Items in a tuple are accessed using a numeric index.

</item>




</list>




<para id="p1007">
Tuples can contain other compound objects, including lists, dictionaries, and 
other tuples. Hence, tuples can be nested inside of other tuples. 

</para>




</section>
<section id="h11004">
<title>
<emphasis id="Sample_program" effect="bold">

Sample program

</emphasis>


</title>




<para id="p1008">
<link id="a1024" target-id="Listing_4">

Listing 4

</link>

 shows a complete listing of a Python program that 

</para>




<list id="ul1008" list-type="bulleted">

	

<item id="li1029">
Creates two tuples.

</item>


	

<item id="li1030">
Nests them in a third tuple.

</item>


	

<item id="li1031">
Determines the length 

<emphasis id="em1003" effect="italics">
(number of items)

</emphasis>
 in the tuple containing the two 
	nested tuples.

</item>


	

<item id="li1032">
Prints various items of information along the way.

</item>


	


</list>




<para id="p1009">
A 

<link id="a1025" url="http://pythontutor.com/visualize.html#mode=display">

visualization

</link>

 of the tuples in this program is provided in 

<link id="a1026" target-id="Figure_5">

Figure 5

</link>

.

</para>





<section id="h21001">
<title>
<emphasis id="Create_two_tuples" effect="bold">

Create two tuples

</emphasis>




</title>




<para id="p1010">
The beginning of the program is shown in 

<link id="a1027" target-id="Listing_1">

Listing 1

</link>

.

</para>




	

<table id="table1000" summary="This is a table." pgwide="630">
<tgroup cols="1">


		

<thead id="thead1000">

			

<row id="tr1000">

				

<entry id="th1000">
<emphasis id="Listing_1" effect="bold">

Listing 1

</emphasis>

. Beginning of the 
				program.


</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1000">

			

<row id="tr1001">

				

<entry id="td1000">



<code id="pre1000" display="block">
# Illustrates creating and displaying nested tuples
#--------------------------------------------------

print("Create/print one tuple")
t1 = 1,2
print(t1)
print("Create/print another tuple")
t2 = "a","b"
print(t2)
</code>




				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>




	

<para id="p1011">
The code in 

<link id="a1028" target-id="Listing_1">

Listing 1

</link>

 creates and displays the two tuples.

</para>




<para id="p1012">
<link id="a1029" target-id="Figure_1">

Figure 1

</link>

 shows the output produced by the code fragment in 

<link id="a1030" target-id="Listing_1">

Listing 1

</link>

. 

</para>


	

<table id="table1001" summary="This is a table." pgwide="630">
<tgroup cols="1">


		

<thead id="thead1001">

			

<row id="tr1002">

				

<entry id="th1001">
<emphasis id="Figure_1" effect="bold">

Figure 1

</emphasis>

. Output from the code 
				in Listing 1.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1001">

			

<row id="tr1003">

				

<entry id="td1001">



<code id="pre1001" display="block">
Create/print one tuple
(1, 2)
Create/print another tuple
('a', 'b')
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>




	

<para id="p1013">
The remaining parts of this program will be presented and discussed as 
	code fragments in subsequent Listings. As mentioned above, a complete listing 
	of the program is shown in 

<link id="a1031" target-id="Listing_4">

Listing 4

</link>

.

</para>




<para id="p1014">
A consolidated view of the output from the program is shown in 

<link id="a1032" target-id="Figure_4">

Figure 4

</link>

.

</para>




</section>
<section id="h21002">
<title>
<emphasis id="Nesting_the_tuples" effect="bold">

Nesting the tuples

</emphasis>

 

</title>




<para id="p1015">
The code in 

<link id="a1033" target-id="Listing_2">

Listing 2

</link>

 nests the two tuples, 

<emphasis id="strong1000" effect="bold">
t1

</emphasis>
 and 

<emphasis id="strong1001" effect="bold">
t2

</emphasis>
, produced earlier, 
along with two strings, in a new tuple. The new tuple is assigned to the 
variable named 

<emphasis id="strong1002" effect="bold">
t3

</emphasis>
. 

</para>


	

<table id="table1002" summary="This is a table." pgwide="630">
<tgroup cols="1">


		

<thead id="thead1002">

			

<row id="tr1004">

				

<entry id="th1002">
<emphasis id="Listing_2" effect="bold">

Listing 2

</emphasis>

. Nesting the tuples.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1002">

			

<row id="tr1005">

				

<entry id="td1002">



<code id="pre1002" display="block">
print("Create/print nested tuple")
t3 = "A",t1,"B",t2
print(t3)
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>






<para id="p1016">
All that is required to nest the existing tuples in a new tuple is to list 
the variables that reference the two existing tuples in a comma-separated list of 
items for creation of the new tuple. 

<emphasis id="em1004" effect="italics">
(Note that the optional parentheses 
were omitted in 

<link id="a1034" target-id="Listing_2">

Listing 2

</link>

.)

</emphasis>
</para>




<para id="p1017">
<link id="a1035" target-id="Figure_2">

Figure 2

</link>

 shows the output for the new tuple containing two nested 
tuples. 

</para>


	

<table id="table1003" summary="This is a table." pgwide="630">
<tgroup cols="1">


		

<thead id="thead1003">

			

<row id="tr1006">

				

<entry id="th1003">
<emphasis id="Figure_2" effect="bold">

Figure 2

</emphasis>

. Output from the code 
				in Listing 2.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1003">

			

<row id="tr1007">

				

<entry id="td1003">



<code id="pre1003" display="block">
Create/print nested tuple
('A', (1, 2), 'B', ('a', 'b'))
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>






<para id="p1018">
Note that the two nested tuples retain their identity as tuples, as indicated 
by the fact that the parentheses surrounding the items in the two nested tuples 
are preserved in the new tuple. This is also indicated by the 

<link id="a1036" url="http://pythontutor.com/visualize.html#mode=display">

visualization

</link>

 
in 

<link id="a1037" target-id="Figure_5">

Figure 5

</link>

.

</para>




</section>
<section id="h21003">
<title>
<emphasis id="Get_the_length_of_the_new_tuple_" effect="bold">

Get the length of the new tuple


</emphasis>

 

</title>




<para id="p1019">
The code in 

<link id="a1038" target-id="Listing_3">

Listing 3

</link>

 shows code that gets and displays the length of the new tuple that contains the two nested tuples. 

</para>


	

<table id="table1004" summary="This is a table." pgwide="630">
<tgroup cols="1">


		

<thead id="thead1004">

			

<row id="tr1008">

				

<entry id="th1004">
<emphasis id="Listing_3" effect="bold">

Listing 3

</emphasis>

. Get the length of 
				the new tuple.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1004">

			

<row id="tr1009">

				

<entry id="td1004">



<code id="pre1004" display="block">
print("Length of nested tuple is:")
print(len(t3))
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>






<para id="p1020">
The length is a measure of the number of items in the tuple, and is obtained 
using the method named 

<emphasis id="strong1003" effect="bold">
len

</emphasis>
. 

</para>




<para id="p1021">
<link id="a1039" target-id="Figure_3">

Figure 3

</link>

 shows the output produced by the code in 

<link id="a1040" target-id="Listing_3">

Listing 3

</link>

, including the 
length of the new tuple containing the two nested tuples. 

</para>


	

<table id="table1005" summary="This is a table." pgwide="630">
<tgroup cols="1">


		

<thead id="thead1005">

			

<row id="tr1010">

				

<entry id="th1005">
<emphasis id="Figure_3" effect="bold">

Figure 3

</emphasis>

. Output from the code 
				in Listing 3.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1005">

			

<row id="tr1011">

				

<entry id="td1005">



<code id="pre1005" display="block">
Length of nested tuple is:
4
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>






<para id="p1022">
It is important to note that even though the tuple shown in 

<link id="a1041" target-id="Figure_2">

Figure 2

</link>

 actually 
consists of six individual items 

<emphasis id="em1005" effect="italics">
(ignoring parentheses)

</emphasis>
, each of the nested 
tuples is treated as a single item, giving a length of only four items for the 
tuple that contains the two nested tuples. 

</para>




<para id="p1023">
This would be true regardless of the length of the nested tuples. 

</para>




<para id="p1024">
You will learn in a future module that a double square-bracket indexing notation can be used 
to gain access to the individual items in tuples that are nested inside of other 
tuples. 

</para>




</section>
</section>
<section id="h11005">
<title>
<emphasis id="Complete_program_listing" effect="bold">

Complete program listing

</emphasis>


</title>




<para id="p1025">
A complete listing of the program is shown in 

<link id="a1042" target-id="Listing_4">

Listing 4

</link>

.

</para>


	

<table id="table1006" summary="This is a table." pgwide="630">
<tgroup cols="1">


		

<thead id="thead1006">

			

<row id="tr1012">

				

<entry id="th1006">
<emphasis id="Listing_4" effect="bold">

Listing 4

</emphasis>

. Complete program 
				listing.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1006">

			

<row id="tr1013">

				

<entry id="td1006">



<code id="pre1006" display="block">
# Illustrates creating and displaying nested tuples
#--------------------------------------------------

print("Create/print one tuple")
t1 = 1,2
print(t1)
print("Create/print another tuple")
t2 = "a","b"
print(t2)
print("Create/print nested tuple")
t3 = "A",t1,"B",t2
print(t3)
print("Length of nested tuple is:")
print(len(t3))
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>



	

<para id="p1026">
<link id="a1043" target-id="Figure_4">

Figure 4

</link>

 shows a consolidated view of the output produced by this program.

</para>


	

<table id="table1007" summary="This is a table." pgwide="630">
<tgroup cols="1">


		

<thead id="thead1007">

			

<row id="tr1014">

				

<entry id="th1007">
<emphasis id="Figure_4" effect="bold">

Figure 4

</emphasis>

. Output from the code 
				in Listing 4.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1007">

			

<row id="tr1015">

				

<entry id="td1007">



<code id="pre1007" display="block">
Create/print one tuple
(1, 2)
Create/print another tuple
('a', 'b')
Create/print nested tuple
('A', (1, 2), 'B', ('a', 'b'))
Length of nested tuple is:
4
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>






</section>
<section id="h11006">
<title>
<emphasis id="Visualization_of_the_tuples" effect="bold">

Visualization of the tuples

</emphasis>


</title>




<para id="p1027">
A 

<link id="a1044" url="http://pythontutor.com/visualize.html#mode=display">

visualization

</link>

 
of the tuples from this program is shown in 

<link id="a1045" target-id="Figure_5">

Figure 5

</link>

.

</para>





<para id="p1028">
<emphasis id="strong1004" effect="bold">
<emphasis id="Figure_5" effect="bold">

Figure 5.

</emphasis>

 Visualization of the tuples.

</emphasis>
</para>




<para id="p1029">
<media id="media1000" alt="Visualization of the tuples." display="block">
<image id="img1000" mime-type="image/jpeg" src="../../media/1359-1110a.jpg" width="774" height="491"/>
</media>


</para>





</section>
<section id="h11007">
<title>
<emphasis id="Run_the_program" effect="bold">

Run the program

</emphasis>


</title>





<para id="p1030">
I encourage you to copy the code from 

<link id="a1046" target-id="Listing_4">

Listing 4

</link>

. Execute the code and confirm 
that you get the same results as those shown in 

<link id="a1047" target-id="Figure_4">

Figure 4

</link>

. Experiment with the code, 
making changes, and observing the results of your changes. Make certain that you 
can explain why your changes behave as they do.

</para>


	

</section>
<section id="h11008">
<title>
<emphasis id="Miscellaneous" effect="bold">

Miscellaneous

</emphasis>


</title>


	

<para id="p1031">
This section contains a variety of miscellaneous information.

</para>





	

<note id="note1000" type="">


		


			


				

<emphasis id="strong1005" effect="bold">
Housekeeping material

</emphasis>

				

<list id="ul1009" list-type="bulleted">

					

<item id="li1033">
Module name: Itse1359-1110-Nested Tuples

</item>


					

<item id="li1034">
File: Itse1359-1110.htm


</item>


					

<item id="li1035">
Published: 10/19/14

</item>


					

<item id="li1036">
Revised: 01/31/16

</item>


				

</list>


				

</note>

			


		



	






	

<note id="note1001" type="">


		


			


				

<emphasis id="strong1006" effect="bold">
Disclaimers:

</emphasis>
<para id="p1032">
<emphasis id="strong1007" effect="bold">
Financial

</emphasis>
: Although the Connexions
site makes it possible for you to download a PDF file for this
module at no charge, and also makes it possible for you to
purchase a pre-printed version of the PDF file, you should be
aware that some of the HTML elements in this module may not translate well into
PDF.

</para>


				

<para id="p1033">
I also want you to know that, I receive no financial compensation from the Connexions website even if you purchase 
	the PDF version of the module.

</para>


				

<para id="p1034">
In the past, unknown individuals have copied my modules from cnx.org, converted them to Kindle books, and 
				placed them for sale on Amazon.com showing me as the author. I 
				neither receive compensation for those sales nor do I know who does 
				receive compensation. If you purchase such a book, please be 
				aware that it is a copy of a module that is freely 
				available on cnx.org and that it was made and published without 
				my prior knowledge.

</para>


				

<para id="p1035">
<emphasis id="strong1008" effect="bold">
Affiliation

</emphasis>
: I am a professor of Computer Information 
	Technology at Austin Community College in Austin, TX.
	

</para>


				

</note>

			


		



	





<para id="p1036">
-end- 

</para>






</section>
</content>




</document>