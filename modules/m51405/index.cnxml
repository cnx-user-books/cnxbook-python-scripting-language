<document xmlns="http://cnx.rice.edu/cnxml"> 
<title>Itse1359-1220-Operators</title>
<metadata xmlns:md="http://cnx.rice.edu/mdml">
  <md:content-id>m51405</md:content-id>
  <md:title>Itse1359-1220-Operators</md:title>
  <md:abstract>This module presents and explains some of the many operators used in Python.</md:abstract>
  <md:uuid>1c3969c4-1ec5-44e5-8839-9ae7d4c1cd9c</md:uuid>
</metadata>

<content>
















<section id="h11000">
<title>
Table of Contents

</title>




<list id="ul1000" list-type="bulleted">

	

<item id="li1000">
<link id="a1000" target-id="Preface">

Preface

</link>


	

<list id="ul1001" list-type="bulleted">

		

<item id="li1001">
<link id="a1001" target-id="What_you_have_learned">

What you have learned

</link>


</item>


		

<item id="li1002">
<link id="a1002" target-id="What_you_will_learn">

What you will learn

</link>


</item>


		

<item id="li1003">
<link id="a1003" target-id="Viewing_tip">

Viewing tip

</link>


<list id="ul1002" list-type="bulleted">

			

<item id="li1004">
<link id="a1004" target-id="Figures">

Figures

</link>


</item>


			

<item id="li1005">
<link id="a1005" target-id="Listings">

Listings

</link>


</item>



		

</list>


		

</item>


	

</list>


	

</item>


	

<item id="li1006">
<link id="a1006" target-id="Operators">

Operators

</link>


	

<list id="ul1003" list-type="bulleted">

		

<item id="li1007">
<link id="a1007" target-id="Arithmetic_operators">

Arithmetic operators

</link>


</item>


		

<item id="li1008">
<link id="a1008" target-id="Relational_operators">

Relational operators

</link>


</item>


		

<item id="li1009">
<link id="a1009" target-id="Logical_operators">

Logical operators

</link>


</item>


		

<item id="li1010">
<link id="a1010" target-id="Bit_shift_operators">

Bit shift operators

</link>


</item>


		

<item id="li1011">
<link id="a1011" target-id="Miscellaneous_operators">

Miscellaneous operators

</link>


</item>


	

</list>


	

</item>



	

<item id="li1012">
<link id="a1012" target-id="Discussion_and_sample_code">

Discussion and sample code

</link>


</item>



	

<item id="li1013">
<link id="a1013" target-id="Miscellaneous">

Miscellaneous

</link>


</item>





</list>


	
	

</section>
<section id="h11001">
<title>
<emphasis id="Preface" effect="bold">

Preface

</emphasis>


</title>


	
	

<para id="p1000">
This module is one in a collection of modules on Python designed for 
teaching 

<emphasis id="em1000" effect="italics">
ITSE 1359 Introduction to Scripting Languages: Python

</emphasis>
 at Austin Community 
College in Austin, TX.

</para>




<section id="h21000">
<title>
<emphasis id="What_you_have_learned" effect="bold">

What you have learned

</emphasis>


</title>




<para id="p1001">
Early modules in this collection included instruction on the following 
topics:

</para>




<list id="ul1004" list-type="bulleted">

	

<item id="li1014">
numbers

</item>


	

<item id="li1015">
variables

</item>


	

<item id="li1016">
identifiers

</item>


	

<item id="li1017">
strings

</item>


	

<item id="li1018">
scripts

</item>


	

<item id="li1019">
lists

</item>




</list>




<para id="p1002">
This instruction has prepared you to use Python as a very fancy desk 
calculator.

</para>




<para id="p1003">
A more recent module provided instruction on the concepts of 

<emphasis id="em1001" effect="italics">
repetition

</emphasis>
 and 


<emphasis id="em1002" effect="italics">
decision logic

</emphasis>
 using the 

<emphasis id="strong1000" effect="bold">
while

</emphasis>
 loop as an example.

</para>




</section>
<section id="h21001">
<title>
<emphasis id="What_you_will_learn" effect="bold">

What you will learn

</emphasis>


</title>




<para id="p1004">
Prior to encountering the conditional clause in the 

<emphasis id="strong1001" effect="bold">
while

</emphasis>
 loop, all of the 
code involving operators was fairly self explanatory: 

</para>




<list id="ul1005" list-type="bulleted">

	

<item id="li1020">
addition

</item>


	

<item id="li1021">
subtraction

</item>


	

<item id="li1022">
multiplication

</item>


	

<item id="li1023">
division

</item>


	

<item id="li1024">
assignment

</item>




</list>




<para id="p1005">
However, when examining the 


<emphasis id="strong1002" effect="bold">
while

</emphasis>
 loop, we were confronted with an operator that was less self explanatory 
-- the l

<emphasis id="em1003" effect="italics">
ess than or equal

</emphasis>
 operator. This suggests that this is the point in this collection 
where we need to describe all, or at least most of the operators 
used in Python. That is the purpose of this module.

</para>


	

</section>
<section id="h21002">
<title>
<emphasis id="Viewing_tip" effect="bold">

Viewing tip

</emphasis>


</title>


	

<para id="p1006">
I recommend that you open another copy of this module in a separate 
browser window and use the following links to easily find and view the Figures 
	and the Listings 
while you are reading about them.

</para>




<para id="p1007">
<emphasis id="em1004" effect="italics">
(Note to blind and visually impaired students: all of the Figures and the 
Listings in 
this module are presented in plain text format and should be accessible using an 
audio screen reader or a braille display. Note however that the required 
indentation may not be properly represented by an audio screen reader.)

</emphasis>
</para>


	

<section id="h31000">
<title>
<emphasis id="Figures" effect="bold">

Figures

</emphasis>


</title>


	

<list id="ul1006" list-type="bulleted">

		

<item id="li1025">
<link id="a1014" target-id="Image_1">

Figure 1

</link>

. Arithmetic operators. 

</item>


		

<item id="li1026">
<link id="a1015" target-id="Image_2">

Figure 2

</link>

. Relational operators.

</item>


		

<item id="li1027">
<link id="a1016" target-id="Image_3">

Figure 3

</link>

. Logical operators.

</item>


		

<item id="li1028">
<link id="a1017" target-id="Image_5">

Figure 4

</link>

. Bit shift operators. 

</item>


		

<item id="li1029">
<link id="a1018" target-id="Image_6">

Figure 5

</link>

. Miscellaneous operators.

</item>


	

</list>




</section>
<section id="h31001">
<title>
<emphasis id="Listings" effect="bold">

Listings

</emphasis>


</title>




<list id="ul1007" list-type="bulleted">

		

<item id="li1030">
<link id="a1019" target-id="Image_4">

Listing 1

</link>

. Logical operators "and", "or", and "not".

</item>




</list>


	
	

</section>
</section>
</section>
<section id="h11002">
<title>
<emphasis id="Operators" effect="bold">

Operators

</emphasis>


</title>


	

<para id="p1008">
The material on operators contained in this module was mainly extracted from 
	

<link id="a1020" url="https://docs.python.org/3/library/operator.html#mapping-operators-to-functions">

10.3.1. Mapping Operators to Functions

</link>

 
	in 

<link id="a1021" url="https://docs.python.org/3/library/index.html">

The Python Standard Library

</link>

.

</para>


	

<section id="h21003">
<title>
<emphasis id="Arithmetic_operators" effect="bold">

Arithmetic operators

</emphasis>


</title>


	

<para id="p1009">
As the name implies, the arithmetic operators are used for performing 
	arithmetic. However, some of the operators are "overloaded" meaning that the 
	behavior of the operator depends on the types of the operands. For example, 
	as you learned in an earlier module, the (+) operator is used both for 
	arithmetic addition and string concatenation.

</para>




<para id="p1010">
<link id="a1022" target-id="Image_1">

Figure 1

</link>

 shows all or at least most of the arithmetic operators.

</para>


	

<table id="table1000" summary="This is a table." pgwide="630">
<tgroup cols="1">


		

<thead id="thead1000">

			

<row id="tr1000">

				

<entry id="th1000">
<emphasis id="Image_1" effect="bold">

Figure 1

</emphasis>

. Arithmetic 
				operators.


</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1000">

			

<row id="tr1001">

				

<entry id="td1000">



<code id="pre1000" display="block">
+    Addition         a + b 
+    Positive         + a     (does essentially nothing)
-    Subtraction      a - b
-    Negation         - a     (change sign of operand)
*    Multiplication   a * b
**   Exponentiation   a ** b
/    Division         a / b   (floating point division)
//   Division         a // b  (integer division)
%    Modulo           a % b
</code>




				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>




	

<para id="p1011">
With the exception of (//) and (%), the behavior of all of the operators 
	in 

<link id="a1023" target-id="Image_1">

Figure 1

</link>

 should be self-explanatory. The behavior of those two operators 
	was explained in the earlier module titled 

<emphasis id="em1005" effect="italics">
Itse1359-1020-Numbers

</emphasis>
.

</para>





</section>
<section id="h21004">
<title>
<emphasis id="Relational_operators" effect="bold">

Relational operators

</emphasis>


</title>




<para id="p1012">
These are the operators that are typically used in the conditional clause of 
decision logic. Basically the operators test to determine if the operator 
describes the relationship between the left and right operands. If so, the 
expression returns true. Otherwise, it returns false.

</para>




<para id="p1013">
<link id="a1024" target-id="Image_2">

Figure 2

</link>

 shows all, or at least most of the relational operators.

</para>


	

<table id="table1001" summary="This is a table." pgwide="630">
<tgroup cols="1">


		

<thead id="thead1001">

			

<row id="tr1002">

				

<entry id="th1001">
<emphasis id="Image_2" effect="bold">

Figure 2

</emphasis>

. Relational 
				operators.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1001">

			

<row id="tr1003">

				

<entry id="td1001">



<code id="pre1001" display="block">
&lt;    a &lt; b    (true if a is less than b)
&lt;=   a &lt;= b   (true if a is less than or equal to b)
==   a == b   (true if a is equal to b)
!=   a != b   (true if a is not equal to b)
&gt;=   a &gt;= b   (true if a is greater than or equal to b)
&gt;    a &gt; b    (true if a is greater than b)
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>




	

</section>
<section id="h21005">
<title>
<emphasis id="Logical_operators" effect="bold">

Logical operators

</emphasis>


</title>




<para id="p1014">
The logical operators are shown in 

<link id="a1025" target-id="Image_3">

Figure 3

</link>

. 

</para>


	

<table id="table1002" summary="This is a table." pgwide="630">
<tgroup cols="1">


		

<thead id="thead1002">

			

<row id="tr1004">

				

<entry id="th1002">
<emphasis id="Image_3" effect="bold">

Figure 3

</emphasis>

. Logical operators.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1002">

			

<row id="tr1005">

				

<entry id="td1002">



<code id="pre1002" display="block">
and   And           a and b   (true if both a and b are true)
or    Inclusive Or  a or b    (true if either a or b are true)
not   Negation      not a     (switch a from true to false
                               or from false to true)

&amp;     Bitwise And           a &amp; b 
^     Bitwise Exclusive Or  a ^ b 
|     Bitwise Inclusive Or  a | b
~     Bitwise Inversion     ~ a 
 
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>




	

<para id="p1015">
The operators in 

<link id="a1026" target-id="Image_3">

Figure 3

</link>

 are often used to embellish the relational 
	operators from 

<link id="a1027" target-id="Image_2">

Figure 2

</link>

 in decision logic.

</para>




<para id="p1016">
The first operator 

<emphasis id="em1006" effect="italics">
(

<emphasis id="strong1003" effect="bold">
and

</emphasis>
)

</emphasis>
 returns true if both operands are true.

</para>




<para id="p1017">
The second operator 

<emphasis id="em1007" effect="italics">
(

<emphasis id="strong1004" effect="bold">
or

</emphasis>
)

</emphasis>
 returns true if either operand is true.

</para>




<para id="p1018">
The third operator 

<emphasis id="em1008" effect="italics">
(

<emphasis id="strong1005" effect="bold">
not

</emphasis>
)

</emphasis>
 has only one operand and it is on the right side of 
the operator. It switches the operand from true to false or from false to true.

</para>




<para id="p1019">
The script in 

<link id="a1028" target-id="Image_4">

Listing 1

</link>

 shows examples of the use of these three operators in 
conjunction with the equality relational operator.

</para>




	

<table id="table1003" summary="This is a table." pgwide="630">
<tgroup cols="1">


		

<thead id="thead1003">

			

<row id="tr1006">

				

<entry id="th1003">
<emphasis id="Image_4" effect="bold">

Listing 1

</emphasis>

. Logical operators 
				"and", "or", and "not".

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1003">

			

<row id="tr1007">

				

<entry id="td1003">



<code id="pre1003" display="block">
a=5
print(a==5 and a==5)
print(a==5 and a==4)
print(a==5 and not a==5)
print(a==5 and not a==4)

print(a==5 or a==5)
print(a==5 or a==4)
print(a==4 or a==4)

#This script produces the following output:
True
False
False
True
True
True
False
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>




	

<para id="p1020">
The last four operators in 

<link id="a1029" target-id="Image_3">

Figure 3

</link>

 are used to perform logical operations 
	at the bit level. An explanation of these operators is beyond the scope of 
	this module.

</para>




</section>
<section id="h21006">
<title>
<emphasis id="Bit_shift_operators" effect="bold">

Bit shift operators

</emphasis>


</title>




<para id="p1021">
The operators in 

<link id="a1030" target-id="Image_5">

Figure 4

</link>

 are used to shift bits to the right or left. As with 
the bitwise logical operators, a discussion of the behavior of these operators 
is beyond the scope of this module.

</para>


	

<table id="table1004" summary="This is a table." pgwide="630">
<tgroup cols="1">


		

<thead id="thead1004">

			

<row id="tr1008">

				

<entry id="th1004">
<emphasis id="Image_5" effect="bold">

Figure 4

</emphasis>

. Bit shift operators.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1004">

			

<row id="tr1009">

				

<entry id="td1004">



<code id="pre1004" display="block">
Left Shift    a &lt;&lt; b
Right Shift   a &gt;&gt; b
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>




	

</section>
<section id="h21007">
<title>
<emphasis id="Miscellaneous_operators" effect="bold">

Miscellaneous operators

</emphasis>


</title>




<para id="p1022">
<link id="a1031" target-id="Image_6">

Figure 5

</link>

 shows a variety of miscellaneous operators. 
You are already familiar with the behavior of the concatenation operator. The 
behavior of the remaining operators will be explained when and if they are used in 
future modules.

</para>


	

<table id="table1005" summary="This is a table." pgwide="630">
<tgroup cols="1">


		

<thead id="thead1005">

			

<row id="tr1010">

				

<entry id="th1005">
<emphasis id="Image_6" effect="bold">

Figure 5

</emphasis>

. Miscellaneous 
				operators.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1005">

			

<row id="tr1011">

				

<entry id="td1005">



<code id="pre1005" display="block">
Concatenation       seq1 + seq2 

Containment Test    obj in seq 
Identity            a is b 
Identity            a is not b 
Indexed Assignment  obj[k] = v 
Indexed Deletion    del obj[k] 
Indexing            obj[k] 
Slice Assignment    seq[i:j] = values
Slice Deletion      del seq[i:j]
Slicing seq[i:j] 
String Formatting   s % obj 
Truth Test          obj truth(obj)
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>




	
	

</section>
</section>
<section id="h11003">
<title>
<emphasis id="Discussion_and_sample_code" effect="bold">

Discussion and sample code

</emphasis>


</title>


	
	

<para id="p1023">
Other than the code shown in 

<link id="a1032" target-id="Image_4">

Listing 1

</link>

, I won't present code to illustrate 
	the use of these operators in this 
	module. Instead, I will use the operators in code in future modules and 
	discuss them, as appropriate when they are used.

</para>


	

</section>
<section id="h11004">
<title>
<emphasis id="Miscellaneous" effect="bold">

Miscellaneous

</emphasis>


</title>


	

<para id="p1024">
This section contains a variety of miscellaneous information.

</para>





	

<note id="note1000" type="">


		


			


				

<emphasis id="strong1006" effect="bold">
Housekeeping material

</emphasis>

				

<list id="ul1008" list-type="bulleted">

					

<item id="li1031">
Module name: Itse1359-1220-Operators

</item>


					

<item id="li1032">
File: Itse1359-1220.htm


</item>


					

<item id="li1033">
Published: 10/26/14

</item>


					

<item id="li1034">
Revised: 02/25/15

</item>


				

</list>


				

</note>

			


		



	






	

<note id="note1001" type="">


		


			


				

<emphasis id="strong1007" effect="bold">
Disclaimers:

</emphasis>
<para id="p1025">
<emphasis id="strong1008" effect="bold">
Financial

</emphasis>
: Although the Connexions
site makes it possible for you to download a PDF file for this
module at no charge, and also makes it possible for you to
purchase a pre-printed version of the PDF file, you should be
aware that some of the HTML elements in this module may not translate well into
PDF.

</para>


				

<para id="p1026">
I also want you to know that, I receive no financial compensation from the Connexions website even if you purchase 
	the PDF version of the module.

</para>


				

<para id="p1027">
In the past, unknown individuals have copied my modules from cnx.org, converted them to Kindle books, and 
				placed them for sale on Amazon.com showing me as the author. I 
				neither receive compensation for those sales nor do I know who does 
				receive compensation. If you purchase such a book, please be 
				aware that it is a copy of a module that is freely 
				available on cnx.org and that it was made and published without 
				my prior knowledge.

</para>


				

<para id="p1028">
<emphasis id="strong1009" effect="bold">
Affiliation

</emphasis>
: I am a professor of Computer Information 
	Technology at Austin Community College in Austin, TX.
	

</para>


				

</note>

			


		



	



	

<para id="p1029">
-end- 

</para>






</section>
</content>




</document>