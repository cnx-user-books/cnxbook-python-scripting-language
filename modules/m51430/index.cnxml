<document xmlns="http://cnx.rice.edu/cnxml"> 
<title>Itse1359-1260-Loop Modifiers</title>
<metadata xmlns:md="http://cnx.rice.edu/mdml">
  <md:content-id>m51430</md:content-id>
  <md:title>Itse1359-1260-Loop Modifiers</md:title>
  <md:abstract>This module explains the Python loop modifiers: else, continue, break,and pass.</md:abstract>
  <md:uuid>d065cdef-539f-42ff-bcb2-b1877bc92a78</md:uuid>
</metadata>

<content>

















<section id="h11000">
<title>
Table of Contents

</title>




<list id="ul1000" list-type="bulleted">

	

<item id="li1000">
<link id="a1000" target-id="Preface">

Preface

</link>


	

<list id="ul1001" list-type="bulleted">

		

<item id="li1001">
<link id="a1001" target-id="What_you_have_learned">

What you have learned

</link>


</item>


		

<item id="li1002">
<link id="a1002" target-id="What_you_will_learn">

What you will learn

</link>


</item>


		

<item id="li1003">
<link id="a1003" target-id="Viewing_tip">

Viewing tip

</link>


<list id="ul1002" list-type="bulleted">

			

<item id="li1004">
<link id="a1004" target-id="Images">

Figures

</link>


</item>


			

<item id="li1005">
<link id="a1005" target-id="Listings">

Listings

</link>


</item>



		

</list>


		

</item>


	

</list>


	

</item>




	

<item id="li1006">
<link id="a1006" target-id="Discussion_and_sample_code">

Discussion and sample code

</link>


<list id="ul1003" list-type="bulleted">

		

<item id="li1007">
<link id="a1007" target-id="The_else_clause">

The else clause

</link>


</item>


		

<item id="li1008">
<link id="a1008" target-id="Visualize_loops_with_else_clauses">

Visualize loops with 
		else clauses

</link>


</item>


		

<item id="li1009">
<link id="a1009" target-id="The_continue_statement">

The continue statement

</link>


</item>


		

<item id="li1010">
<link id="a1010" target-id="Visualize_the_behavior_of_the_continue_statement">


		Visualize the behavior of the continue statement

</link>


</item>


		

<item id="li1011">
<link id="a1011" target-id="The_break_statement">

The break statement

</link>


</item>


		

<item id="li1012">
<link id="a1012" target-id="Visualize_the_behavior_of_the_break_statement">

Visualize 
		the behavior of the break statement

</link>


</item>


		

<item id="li1013">
<link id="a1013" target-id="The_pass_statement">

The pass statement

</link>


</item>


	

</list>


	

</item>



	

<item id="li1014">
<link id="a1014" target-id="Run_the_program">

Run the program

</link>


</item>



	

<item id="li1015">
<link id="a1015" target-id="Miscellaneous">

Miscellaneous

</link>


</item>




</list>


	
	

</section>
<section id="h11001">
<title>
<emphasis id="Preface" effect="bold">

Preface

</emphasis>


</title>


	
	

<para id="p1000">
This module is one in a collection of modules on Python designed for 
teaching 

<emphasis id="em1000" effect="italics">
ITSE 1359 Introduction to Scripting Languages: Python

</emphasis>
 at Austin Community 
College in Austin, TX. 

</para>




<section id="h21000">
<title>
<emphasis id="What_you_have_learned" effect="bold">

What you have learned

</emphasis>


</title>




<para id="p1001">
You have learned how to construct 

<emphasis id="strong1000" effect="bold">
while

</emphasis>
 loops, 

<emphasis id="strong1001" effect="bold">
for

</emphasis>
 
loops, and 

<emphasis id="strong1002" effect="bold">
if

</emphasis>
 statements in recent modules on 

<emphasis id="em1001" effect="italics">
control flow

</emphasis>
 
in Python. In addition, you recently learned how to create 

<emphasis id="em1002" effect="italics">
nested loop 
structures

</emphasis>
.

</para>




</section>
<section id="h21001">
<title>
<emphasis id="What_you_will_learn" effect="bold">

What you will learn

</emphasis>


</title>




<para id="p1002">
In this module, you will learn how to add an 

<emphasis id="strong1003" effect="bold">
else

</emphasis>
 clause to


<emphasis id="strong1004" effect="bold">
while

</emphasis>
 loops and 

<emphasis id="strong1005" effect="bold">
for

</emphasis>
 loops. In addition, once 
you start using nested loops, you need to know how to use the loop modifiers: 

<emphasis id="strong1006" effect="bold">

continue

</emphasis>
 and 

<emphasis id="strong1007" effect="bold">
break

</emphasis>
. Those loop modifiers will be 
explained in this module.

</para>




<para id="p1003">
Finally, this module will make a brief mention of the 

<emphasis id="strong1008" effect="bold">
pass

</emphasis>
 
statement, which does nothing. If you need to write code that does nothing, the


<emphasis id="strong1009" effect="bold">
pass

</emphasis>
 statement is for you.

</para>


	

</section>
<section id="h21002">
<title>
<emphasis id="Viewing_tip" effect="bold">

Viewing tip

</emphasis>


</title>


	

<para id="p1004">
I recommend that you open another copy of this module in a separate 
browser window and use the following links to easily find and view the Figures 
	and the Listings while you are reading about them.

</para>




<para id="p1005">
<emphasis id="em1003" effect="italics">
(Note to blind and visually impaired students: most of the Figures and all of the 
Listings in 
this module are presented in plain text format and should be accessible using an 
audio screen reader or a braille display. Note however that the required 
indentation may not be properly represented by an audio screen reader.)

</emphasis>
</para>


	

<section id="h31000">
<title>
<emphasis id="Images" effect="bold">

Figures

</emphasis>


</title>


	

<list id="ul1004" list-type="bulleted">




<item id="li1016">
<link id="a1016" target-id="Image_2">

Figure 1

</link>

. Output from the code in Listing 1.

</item>





<item id="li1017">
<link id="a1017" target-id="Image_4">

Figure 2

</link>

. Output from the code in Listing 2.

</item>





<item id="li1018">
<link id="a1018" target-id="Image_6">

Figure 3

</link>

. Output from the code in Listing 3.

</item>


	

</list>




</section>
<section id="h31001">
<title>
<emphasis id="Listings" effect="bold">

Listings

</emphasis>


</title>




<list id="ul1005" list-type="bulleted">



<item id="li1019">
<link id="a1019" target-id="Image_1">

Listing 1

</link>

. Loops with else clauses. 

</item>




<item id="li1020">
<link id="a1020" target-id="Image_3">

Listing 2

</link>

. Nested loops with a continue statement.

</item>




<item id="li1021">
<link id="a1021" target-id="Image_5">

Listing 3

</link>

. Nested loops with a break statement.

</item>




</list>


	

</section>
</section>
</section>
<section id="h11002">
<title>
<emphasis id="Discussion_and_sample_code" effect="bold">

Discussion and sample code

</emphasis>


</title>


	



<section id="h21003">
<title>
<emphasis id="The_else_clause" effect="bold">

The else clause

</emphasis>


</title>




<para id="p1006">
You learned about the 

<emphasis id="strong1010" effect="bold">
else

</emphasis>
 clause on an 

<emphasis id="strong1011" effect="bold">
if

</emphasis>
 
statement in an earlier module titled 

<emphasis id="em1004" effect="italics">
Itse1359-1230-The if Statement

</emphasis>
.

</para>




<para id="p1007">
Loop statements can also have an 

<emphasis id="strong1012" effect="bold">
else

</emphasis>
 clause. The 

<emphasis id="strong1013" effect="bold">
else

</emphasis>
 
clause on a 

<emphasis id="strong1014" effect="bold">
for

</emphasis>
 loop is executed when the loop terminates through exhaustion of the 
elements in the list. 
The 

<emphasis id="strong1015" effect="bold">
else

</emphasis>
 clause on a 

<emphasis id="strong1016" effect="bold">
while

</emphasis>
 loop is executed 
when the loop terminates because the condition becomes 

<emphasis id="strong1017" effect="bold">
False

</emphasis>
. 
The 

<emphasis id="strong1018" effect="bold">
else

</emphasis>
 clause is not executed when 


<emphasis id="the_loop_is_terminated_by_a" effect="bold">

the loop is 
terminated by a

</emphasis>

 

<link id="a1022" target-id="The_break_statement">

break

</link>

 statement.

</para>




<para id="p1008">
I will illustrate the 

<emphasis id="strong1019" effect="bold">
else

</emphasis>
 clause using a program that is similar to the 
odometer program that you learned about in the earlier module titled 


<link id="a1023" url="http://cnx.org/contents/34d000fd-1e35-482b-b8d5-96b32a552b48">

Itse1359-1250-Nested Loops

</link>

. The program is shown in 

<link id="a1024" target-id="Image_1">


Listing 1

</link>

.

</para>


	

<table id="table1000" summary="This is a table." pgwide="630">
<tgroup cols="1">


		

<thead id="thead1000">

			

<row id="tr1000">

				

<entry id="th1000">
<emphasis id="Image_1" effect="bold">

Listing 1

</emphasis>

. Loops with else 
				clauses.


</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1000">

			

<row id="tr1001">

				

<entry id="td1000">




<code id="pre1000" display="block">
# Illustrates nested loops with else clauses
#---------------------------------------------------------------------------

leftDigit = 0
rightDigit = 0

#Begin outer while loop
while leftDigit &lt; 2:
  leftDigit += 1

  #Begin for loop
  for middleDigit in range(1,3):
    rightDigit = 0

    #Begin innermost while loop
    while rightDigit &lt; 3:
      rightDigit += 1
      print(str(leftDigit) + "-" + str(middleDigit) + "-" + str(rightDigit))
    else:
      print("In else clause on inner while loop")
    #end inner while loop with else clause


  else:
    print("In else clause on for loop")
  #end for loop with else clause

else:
  print("In else clause on outer while loop")
#end outer while loop with else clause

print("Goodbye")
</code>





				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>




	

<para id="p1009">
The output from the code in 

<link id="a1025" target-id="Image_1">

Listing 1

</link>

 is shown in 

<link id="a1026" target-id="Image_2">


	Figure 1

</link>

.

</para>




	

<table id="table1001" summary="This is a table." pgwide="630">
<tgroup cols="1">


		

<thead id="thead1001">

			

<row id="tr1002">

				

<entry id="th1001">
<emphasis id="Image_2" effect="bold">

Figure 1

</emphasis>

. Output from the code 
				in Listing 1.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1001">

			

<row id="tr1003">

				

<entry id="td1001">




<code id="pre1001" display="block">
1-1-1
1-1-2
1-1-3
In else clause on inner while loop
1-2-1
1-2-2
1-2-3
In else clause on inner while loop
In else clause on for loop
2-1-1
2-1-2
2-1-3
In else clause on inner while loop
2-2-1
2-2-2
2-2-3
In else clause on inner while loop
In else clause on for loop
In else clause on outer while loop
Goodbye
</code>




				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>




	

<para id="p1010">
You should already be familiar with most of the code in 

<link id="a1027" target-id="Image_1">


	Listing 1

</link>

. Some of 
	the statements have been rearranged relative to the odometer code in the 
	earlier module and some of the limits in the conditions have been reduced. 
	However, that was done simply to shorten and to improve the clarity of the 
	printed output and is of no technical consequence.

</para>




<para id="p1011">
The only thing that is new in 

<link id="a1028" target-id="Image_1">

Listing 1

</link>

 is the addition of an 

<emphasis id="strong1020" effect="bold">

else

</emphasis>
 clause to each of the loops. Note that the indentation level of 
the word 

<emphasis id="strong1021" effect="bold">
else

</emphasis>
 in each case is the same as the indentation level for the 
corresponding words 

<emphasis id="strong1022" effect="bold">
while

</emphasis>
 and 

<emphasis id="strong1023" effect="bold">
for

</emphasis>
. For example, the last 

<emphasis id="strong1024" effect="bold">

else

</emphasis>
 clause in 

<link id="a1029" target-id="Image_1">

Listing 1

</link>

 belongs to the outermost 

<emphasis id="strong1025" effect="bold">
while

</emphasis>
 
loop that begins with the word 

<emphasis id="strong1026" effect="bold">
while

</emphasis>
 near the top of 

<link id="a1030" target-id="Image_1">


Listing 1

</link>

.

</para>




<para id="p1012">
In this program, each of the 

<emphasis id="strong1027" effect="bold">
else

</emphasis>
 clauses simply prints a message 
indicating that it is being executed. Obviously, more substantive code could be 
placed in the 

<emphasis id="strong1028" effect="bold">
else

</emphasis>
 clause in a more significant program.

</para>




<para id="p1013">
The innermost 

<emphasis id="strong1029" effect="bold">
while

</emphasis>
 loop in this program is executed 
twice for each iteration of its enclosing 

<emphasis id="strong1030" effect="bold">
for

</emphasis>
 loop. Similarly, 
the 

<emphasis id="strong1031" effect="bold">
for

</emphasis>
 loop is executed twice for each iteration of its 
enclosing 

<emphasis id="strong1032" effect="bold">
while

</emphasis>
 loop. The outermost 

<emphasis id="strong1033" effect="bold">
while

</emphasis>
 
loop is executed once, the 

<emphasis id="strong1034" effect="bold">
for

</emphasis>
 loop is executed twice, and the 
innermost 

<emphasis id="strong1035" effect="bold">
while

</emphasis>
 loop is executed 

<emphasis id="strong1036" effect="bold">
four

</emphasis>
 times.

</para>





<para id="p1014">
The 

<emphasis id="strong1037" effect="bold">
else

</emphasis>
 clause for a loop is executed each time the loop 
terminates 

<emphasis id="em1005" effect="italics">
(with the exception of 

<link id="a1031" target-id="The_break_statement">

break

</link>

 as mentioned 
earlier)

</emphasis>
. As you can see in 

<link id="a1032" target-id="Image_2">

Figure 1

</link>

, the 

<emphasis id="strong1038" effect="bold">
else

</emphasis>
 clause on 
the innermost 

<emphasis id="strong1039" effect="bold">
while

</emphasis>
 loop was executed four times, the 

<emphasis id="strong1040" effect="bold">

else

</emphasis>
 clause on the 

<emphasis id="strong1041" effect="bold">
for

</emphasis>
 loop was executed two times, 
and the 

<emphasis id="strong1042" effect="bold">
else

</emphasis>
 clause on the outermost 

<emphasis id="strong1043" effect="bold">
while

</emphasis>
 
loop was executed once.

</para>




</section>
<section id="h21004">
<title>
<emphasis id="Visualize_loops_with_else_clauses" effect="bold">

Visualize loops with else 
clauses

</emphasis>


</title>




<para id="p1015">
I recommend that you create a


<link id="a1033" url="http://pythontutor.com/visualize.html#mode=display">

visualization

</link>

 
for the code in 

<link id="a1034" target-id="Image_1">


	Listing 1

</link>

 and step through the program one instruction at a time. As 
you do that, pay attention to the movements of the red and green arrows on the 
left, the diagram on the right, and the printed material at the bottom. That 
should help you to better understand the behavior of loops with else clauses.

</para>




</section>
<section id="h21005">
<title>
<emphasis id="The_continue_statement" effect="bold">

The continue statement

</emphasis>


</title>




<para id="p1016">
If you execute a 

<emphasis id="strong1044" effect="bold">
continue

</emphasis>
 statement inside a 

<emphasis id="strong1045" effect="bold">
while

</emphasis>
 loop or a


<emphasis id="strong1046" effect="bold">
for

</emphasis>
 loop, that will cause the current iteration of the loop to 
terminate and the next iteration to begin.

</para>




<quote id="blockquote1000" display="block">
(Be careful that the code that updates the condition in a while loop 
is not bypassed by a continue statement. If you do, you will end up with an 
infinite loop.)

</quote>




<para id="p1017">
The use of a 

<emphasis id="strong1047" effect="bold">
continue

</emphasis>
 statement is illustrated in 

<link id="a1035" target-id="Image_3">


Listing 2

</link>

, which shows an 

<emphasis id="strong1048" effect="bold">
if

</emphasis>
 statement 


<emphasis id="em1006" effect="italics">
(with a 

</emphasis>
 

<emphasis id="strong1049" effect="bold">
<emphasis id="em1007" effect="italics">
continue

</emphasis>
</emphasis>
<emphasis id="em1008" effect="italics">
 statement in the body 
of the 

<emphasis id="strong1050" effect="bold">
if

</emphasis>
 statement)

</emphasis>
 inserted 
into the innermost 

<emphasis id="strong1051" effect="bold">
while

</emphasis>
 loop of the program from 

<link id="a1036" target-id="Image_1">


Listing 1

</link>

.

</para>


	

<table id="table1002" summary="This is a table." pgwide="630">
<tgroup cols="1">


		

<thead id="thead1002">

			

<row id="tr1004">

				

<entry id="th1002">
<emphasis id="Image_3" effect="bold">

Listing 2

</emphasis>

. Nested loops with a 
				continue statement.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1002">

			

<row id="tr1005">

				

<entry id="td1002">




<code id="pre1002" display="block">
# Illustrates nested loops with else and continue
# --------------------------------------------------------------------------

leftDigit = 0
rightDigit = 0

#Begin outer while loop
while leftDigit &lt; 2:
  leftDigit += 1

  #Begin for loop
  for middleDigit in range(1,3):
    rightDigit = 0

    #Begin innermost while loop
    while rightDigit &lt; 3:
      rightDigit += 1
      if rightDigit == 2:
        print("continue")
        continue
      print(str(leftDigit) + "-" + str(middleDigit) + "-" + str(rightDigit))
    else:
      print("In else clause on inner while loop")
    #end inner while loop with else clause


  else:
    print("In else clause on for loop")
  #end for loop with else clause

else:
  print("In else clause on outer while loop")
#end outer while loop with else clause

print("Goodbye")
</code>




				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>




	

<para id="p1018">
<link id="a1037" target-id="Image_4">

Figure 2

</link>

 shows the output produced by the code in 

<link id="a1038" target-id="Image_3">


	Listing 2

</link>

. You should compare this output with the output shown in 

<link id="a1039" target-id="Image_2">


	Figure 1

</link>

.

</para>




	

<table id="table1003" summary="This is a table." pgwide="630">
<tgroup cols="1">


		

<thead id="thead1003">

			

<row id="tr1006">

				

<entry id="th1003">
<emphasis id="Image_4" effect="bold">

Figure 2

</emphasis>

. Output from the code 
				in Listing 2.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1003">

			

<row id="tr1007">

				

<entry id="td1003">




<code id="pre1003" display="block">
1-1-1
continue
1-1-3
In else clause on inner while loop
1-2-1
continue
1-2-3
In else clause on inner while loop
In else clause on for loop
2-1-1
continue
2-1-3
In else clause on inner while loop
2-2-1
continue
2-2-3
In else clause on inner while loop
In else clause on for loop
In else clause on outer while loop
Goodbye
</code>




				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>






<para id="p1019">
Once during each iteration of the 

<emphasis id="strong1052" effect="bold">
while

</emphasis>
 loop in 

<link id="a1040" target-id="Image_3">


Listing 2

</link>

, a test is made to 
determine if the condition variable, 

<emphasis id="strong1053" effect="bold">
rightDigit

</emphasis>
, is equal to 2. 
If so, the word 

<emphasis id="em1009" effect="italics">
continue

</emphasis>
 is printed and a 

<emphasis id="strong1054" effect="bold">
continue

</emphasis>
 statement is executed.

</para>




<para id="p1020">
The execution of the 

<emphasis id="strong1055" effect="bold">
continue

</emphasis>
 statement causes the current iteration of the 
loop to terminate and the next iteration to begin. This, in turn causes the 


<emphasis id="strong1056" effect="bold">
print

</emphasis>
 statement following the 

<emphasis id="strong1057" effect="bold">
if

</emphasis>
 statement to be skipped and 
the word 

<emphasis id="em1010" effect="italics">
continue

</emphasis>
 to be printed in its place. You can easily see 
where this happens by comparing the output in 

<link id="a1041" target-id="Image_4">

Figure 2

</link>

 with the output in 

<link id="a1042" target-id="Image_2">


Figure 1

</link>

.

</para>




</section>
<section id="h21006">
<title>
<emphasis id="Visualize_the_behavior_of_the_continue_statement" effect="bold">

Visualize the 
behavior of the continue statement

</emphasis>


</title>




<para id="p1021">
I also recommend that you create a


<link id="a1043" url="http://pythontutor.com/visualize.html#mode=display">

visualization

</link>

  
for the code in 

<link id="a1044" target-id="Image_3">


	Listing 2

</link>

 and step through the program one instruction at a time. As you 
do that, pay attention to the movements of the red and green arrows on the left, 
the diagram on the right, and the printed material at the bottom. That should 
help you to better understand the behavior of the 

<emphasis id="strong1058" effect="bold">
continue

</emphasis>
 
statement.

</para>




</section>
<section id="h21007">
<title>
<emphasis id="The_break_statement" effect="bold">

The break statement

</emphasis>


</title>




<para id="p1022">
The 

<emphasis id="strong1059" effect="bold">
break

</emphasis>
 statement is much more drastic than the 

<emphasis id="strong1060" effect="bold">
continue

</emphasis>
 statement. Whereas 
a 

<emphasis id="strong1061" effect="bold">
continue

</emphasis>
 statement causes the current iteration of the loop to terminate, a 


<emphasis id="strong1062" effect="bold">
break

</emphasis>
 statement causes the entire loop to terminate.

</para>




<para id="p1023">
This is illustrated in 

<link id="a1045" target-id="Image_5">

Listing 3

</link>

, which shows a 

<emphasis id="strong1063" effect="bold">
break

</emphasis>
 statement 
inserted in place of the 


<emphasis id="strong1064" effect="bold">
continue

</emphasis>
 statement from 

<link id="a1046" target-id="Image_3">

Listing 2

</link>

. The 

<emphasis id="strong1065" effect="bold">
print

</emphasis>
 statement was also 
modified, causing it to print 

<emphasis id="em1011" effect="italics">
break

</emphasis>
 in place of 

<emphasis id="em1012" effect="italics">
continue

</emphasis>
.

</para>


	

<table id="table1004" summary="This is a table." pgwide="630">
<tgroup cols="1">


		

<thead id="thead1004">

			

<row id="tr1008">

				

<entry id="th1004">
<emphasis id="Image_5" effect="bold">

Listing 3

</emphasis>

. Nested loops with a 
				break statement.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1004">

			

<row id="tr1009">

				

<entry id="td1004">




<code id="pre1004" display="block">
# Illustrates nested loops with else and break
#---------------------------------------------------------------------------

leftDigit = 0
rightDigit = 0

#Begin outer while loop
while leftDigit &lt; 2:
  leftDigit += 1

  #Begin for loop
  for middleDigit in range(1,3):
    rightDigit = 0

    #Begin innermost while loop
    while rightDigit &lt; 3:
      rightDigit += 1
      if rightDigit == 2:
        print("break")
        break
      print(str(leftDigit) + "-" + str(middleDigit) + "-" + str(rightDigit))
    else:
      print("In else clause on inner while loop")
    #end inner while loop with else clause


  else:
    print("In else clause on for loop")
  #end for loop with else clause

else:
  print("In else clause on outer while loop")
#end outer while loop with else clause

print("Goodbye")
</code>




				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>




	

<para id="p1024">
The output from the code in 

<link id="a1047" target-id="Image_5">

Listing 3

</link>

 is shown in 

<link id="a1048" target-id="Image_6">


	Figure 3

</link>

. 
	You should compare this with the output shown in 

<link id="a1049" target-id="Image_4">

Figure 2

</link>

.

</para>




	

<table id="table1005" summary="This is a table." pgwide="630">
<tgroup cols="1">


		

<thead id="thead1005">

			

<row id="tr1010">

				

<entry id="th1005">
<emphasis id="Image_6" effect="bold">

Figure 3

</emphasis>

. Output from the code in 
				Listing 3.

</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1005">

			

<row id="tr1011">

				

<entry id="td1005">




<code id="pre1005" display="block">
1-1-1
break
1-2-1
break
In else clause on for loop
2-1-1
break
2-2-1
break
In else clause on for loop
In else clause on outer while loop
Goodbye
</code>




				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>




	

<para id="p1025">
The output for the 

<emphasis id="strong1066" effect="bold">
continue

</emphasis>
 statement in 

<link id="a1050" target-id="Image_4">


	Figure 2

</link>

 shows that only one 
	iteration of the innermost 

<emphasis id="strong1067" effect="bold">
while

</emphasis>
 loop was impacted by the 
	

<emphasis id="strong1068" effect="bold">
if

</emphasis>
 statement and 
	the 

<emphasis id="strong1069" effect="bold">
continue

</emphasis>
 statement in its body.

</para>




<para id="p1026">
The output shown in 

<link id="a1051" target-id="Image_6">

Figure 3

</link>

 shows that once the 


<emphasis id="strong1070" effect="bold">
break

</emphasis>
 statement was executed, 
no further iterations of the innermost 

<emphasis id="strong1071" effect="bold">
while

</emphasis>
 loop were executed. In other words, 
execution of the 

<emphasis id="strong1072" effect="bold">
break

</emphasis>
 statement terminated the loop in its entirety.

</para>




<para id="p1027">
<link id="a1052" target-id="Image_6">

Figure 3

</link>

 also shows that termination caused by a 


<emphasis id="strong1073" effect="bold">
break

</emphasis>
 statement also prevented the 
execution of the code in the 

<emphasis id="strong1074" effect="bold">
else

</emphasis>
 clause for the innermost 


<emphasis id="strong1075" effect="bold">
while

</emphasis>
 loop as 
indicated 

<link id="a1053" target-id="the_loop_is_terminated_by_a">

earlier

</link>

..

</para>













<para id="p1028">
The innermost 

<emphasis id="strong1076" effect="bold">
while

</emphasis>
 loop is still executed 
twice for each iteration of its enclosing 

<emphasis id="strong1077" effect="bold">
for

</emphasis>
 loop. However, 
the 

<emphasis id="strong1078" effect="bold">
while

</emphasis>
 loop terminates part of the way through the second iteration and the printed 
output that would be produced by the second and third iterations 

<emphasis id="em1013" effect="italics">
(see 

<link id="a1054" target-id="Image_5">

Listing 3

</link>

)

</emphasis>
 is 
missing from the output shown in 

<link id="a1055" target-id="Image_6">

Figure 3

</link>

.

</para>




</section>
<section id="h21008">
<title>
<emphasis id="Visualize_the_behavior_of_the_break_statement" effect="bold">

Visualize the 
behavior of the break statement

</emphasis>


</title>




<para id="p1029">
I also recommend that you create a 

<link id="a1056" url="http://pythontutor.com/visualize.html#mode=display">

visualization

</link>

  
for the code in 

<link id="a1057" target-id="Image_5">

Listing 3

</link>

 and step through the program 
one instruction at a time. As you do that, pay attention to the movements of the 
red and green arrows on the left, the diagram on the right, and the printed 
material at the bottom. That should help you to better understand the behavior 
of the 

<emphasis id="strong1079" effect="bold">
break

</emphasis>
 statement.

</para>




</section>
<section id="h21009">
<title>
<emphasis id="The_pass_statement" effect="bold">

The pass statement

</emphasis>


</title>




<para id="p1030">
I promised that this module will make brief mention of the 

<emphasis id="strong1080" effect="bold">
pass

</emphasis>
 statement, which does nothing. This is that brief mention. If you 
need to write code that does nothing, the 

<emphasis id="strong1081" effect="bold">
pass

</emphasis>
 statement will do that for you.

</para>





</section>
</section>
<section id="h11003">
<title>
<emphasis id="Run_the_program" effect="bold">

Run the program

</emphasis>


</title>





<para id="p1031">
I encourage you to copy the code from 

<link id="a1058" target-id="Image_1">

Listing 1

</link>

, 

<link id="a1059" target-id="Image_3">


Listing 2

</link>

, and 

<link id="a1060" target-id="Image_5">

Listing 3

</link>

. Execute the code and confirm 
that you get the same results as those shown in 

<link id="a1061" target-id="Image_2">

Figure 1

</link>

, 

<link id="a1062" target-id="Image_4">


Figure 2

</link>

, and 

<link id="a1063" target-id="Image_6">

Figure 3

</link>

. Experiment with the code, 
making changes, and observing the results of your changes. Make certain that you 
can explain why your changes behave as they do.

</para>




<para id="p1032">
I also recommend that you create and experiment with


<link id="a1064" url="http://pythontutor.com/visualize.html#mode=edit">

visualizations

</link>

 for 
the code in 

<link id="a1065" target-id="Image_1">

Listing 1

</link>

, 

<link id="a1066" target-id="Image_3">


Listing 2

</link>

, and 

<link id="a1067" target-id="Image_5">

Listing 3

</link>

.

</para>


	

</section>
<section id="h11004">
<title>
<emphasis id="Miscellaneous" effect="bold">

Miscellaneous

</emphasis>


</title>


	

<para id="p1033">
This section contains a variety of miscellaneous information.

</para>





	

<note id="note1000" type="">


		


			


				

<emphasis id="strong1082" effect="bold">
Housekeeping material

</emphasis>

				

<list id="ul1006" list-type="bulleted">

					

<item id="li1022">
Module name: Itse1359-1260-Loop Modifiers

</item>


					

<item id="li1023">
File: Itse1359-1260.htm


</item>


					

<item id="li1024">
Published: 10/26/14

</item>


					

<item id="li1025">
Revised: 09/05/15

</item>


				

</list>


				

</note>

			


		



	






	

<note id="note1001" type="">


		


			


				

<emphasis id="strong1083" effect="bold">
Disclaimers:

</emphasis>
<para id="p1034">
<emphasis id="strong1084" effect="bold">
Financial

</emphasis>
: Although the Connexions
site makes it possible for you to download a PDF file for this
module at no charge, and also makes it possible for you to
purchase a pre-printed version of the PDF file, you should be
aware that some of the HTML elements in this module may not translate well into
PDF.

</para>


				

<para id="p1035">
I also want you to know that, I receive no financial compensation from the Connexions website even if you purchase 
	the PDF version of the module.

</para>


				

<para id="p1036">
In the past, unknown individuals have copied my modules from cnx.org, converted them to Kindle books, and 
				placed them for sale on Amazon.com showing me as the author. I 
				neither receive compensation for those sales nor do I know who does 
				receive compensation. If you purchase such a book, please be 
				aware that it is a copy of a module that is freely 
				available on cnx.org and that it was made and published without 
				my prior knowledge.

</para>


				

<para id="p1037">
<emphasis id="strong1085" effect="bold">
Affiliation

</emphasis>
: I am a professor of Computer Information 
	Technology at Austin Community College in Austin, TX.
	

</para>


				

</note>

			


		



	





<para id="p1038">
-end- 

</para>






</section>
</content>




</document>